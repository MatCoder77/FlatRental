## Server Properties
server.port=8443

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url= jdbc:mysql://localhost:3306/home_rental_database?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8
spring.datasource.username= root
spring.datasource.password= root123

## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.connection.characterEncoding = utf-8;
spring.jpa.properties.hibernate.connection.CharSet = utf-8;
spring.jpa.properties.hibernate.connection.useUnicode = true;
spring.jpa.hibernate.ddl-auto = update

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG
logging.level.org.hibernate.type = TRACE

# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC


## Terryt API

soap.auth.header=<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><wsse:UsernameToken xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><wsse:Username>%(loginuser)</wsse:Username><wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">%(loginpass)</wsse:Password></wsse:UsernameToken></wsse:Security>
soap.auth.username=TestPubliczny
soap.auth.password=1234abcd

## Elasticsearch

elasticsearch.host=localhost
elasticsearch.port=9200
elasticsearch.username=
elasticsearch.password=

## Spring Logging

logging.level.org.springframework.ws=TRACE
spring.main.allow-bean-definition-overriding=true

## App Properties
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000

logging.level.org.springframework.security=DEBUG

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/home/mateusz/IdeaProjects/uploads

################### JavaMail Configuration ##########################

spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=flat.rental.app@gmail.com
spring.mail.password=jelen_kopytko_klucz_zielony_A@w45

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
#spring.mail.properties.transport.protocol=smtp
#spring.mail.properties.smtp.starttls.enable=true
spring.mail.properties.debug=true
spring.mail.properties.mail.from.email=flat.rental.app@gmail.com

# SSL, post 465
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory

################# SSL Configuration ###################################
server.ssl.enabled=true
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/localhost.p12
server.ssl.key-store-password=changeit


